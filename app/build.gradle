//applies the Android plugin for Gradle to this build. This adds Android-specific build tasks
// to the top-level build tasks and makes the android {...} element available to specify
// Android-specific build options.
apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
// Add the Crashlytics Gradle plugin
apply plugin: 'com.google.firebase.crashlytics'


configurations {
    configureEach {
        exclude module: 'httpclient'
        exclude module: 'commons-logging'
    }
}

buildscript {

    repositories {
        maven { url 'https://maven.google.com' }
        mavenCentral()
    }

    dependencies {
        classpath 'com.google.gms:google-services:4.4.0'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlinVersion"
    }

}

android {
    compileSdk 34
    // each version of the Android Gradle Plugin now has a default version of the build tools.
    //buildToolsVersion '25.0.3'

    defaultConfig {
        // The values in defaultConfig override those in the manifest file.
        applicationId "com.ndhunju.dailyjournalplus"
        minSdkVersion 19
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

        //work around for Error:Error: error in parsing "g/"
        //generatedDensities = []
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }

    // Disable all kinds of splitting of APK file since it is causing
    // ResourceNotFound exception probably because of side loading the
    // app i.e. one user downloaded the apk for one device and shared
    // with another user with a different device. Also, our app isn't
    // big to lose much for not splitting the apk to save space
    // See https://stackoverflow.com/a/53082301
    bundle {

        language {
            enableSplit = false
        }

        density {
            enableSplit = false
        }

        abi {
            enableSplit = false
        }
    }


    buildTypes {
        //By default, the build system defines two build types: debug and release
        release {
            //shrink the code to save space
            minifyEnabled true
            //use proGaurd to optimize, obfuscate
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
        }
        debug {
            debuggable true
        }

    }

    // Specifies one flavor dimension.
    flavorDimensions = ["version"]

    productFlavors {
        local {
            dimension = "version"
            applicationIdSuffix ".local"
            versionNameSuffix "-local"
        }

        prod {
            dimension = "version"
        }
    }

    testOptions {
        //All methods throw exceptions (by default). This is to make sure your unit tests only
        // test your code and do not depend on any particular behaviour of the Android platform
        // (that you have not explicitly mocked e.g. using Mockito). If that proves problematic,
        // you can add the snippet below to your build.gradle to change this behavior:
        //unitTests.returnDefaultValues = true
    }
    sourceSets {
        main {
            assets.srcDirs += ['src/main/assets', 'src/main/assets/']
            java.srcDirs += ['src/main/java']
        }
        androidTest.setRoot('src/androidTest')
    }


    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }
    namespace 'com.ndhunju.dailyjournal'
    lint {
        disable 'MissingTranslation'
    }
}

//The dependencies element is outside and after the android element. This element declares the
// dependencies for this module. The build system adds all the compile dependencies to the
// compilation classpath and includes them in the final package.
dependencies {
    // Remote binary dependency
    implementation 'com.google.firebase:firebase-core:21.1.1'
    implementation 'androidx.appcompat:appcompat:1.6.1'
    implementation 'androidx.annotation:annotation:1.7.1'
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    implementation 'androidx.preference:preference-ktx:1.2.1'
    implementation 'com.google.android.gms:play-services-drive:17.0.0'
    implementation 'androidx.legacy:legacy-support-v13:1.0.0'
    implementation 'com.google.android.gms:play-services-auth:20.7.0'

    implementation 'androidx.multidex:multidex:2.0.1'

    implementation 'com.google.api-client:google-api-client:1.31.1'
    implementation('com.google.api-client:google-api-client-android:1.22.0')
    implementation 'com.google.oauth-client:google-oauth-client-jetty:1.23.0'
    implementation 'com.google.apis:google-api-services-drive:v3-rev20201130-1.31.0'

    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:31.2.0')

    // local repo downloaded with SDK Manager
    // Import the BoM for the Firebase platform
    implementation platform('com.google.firebase:firebase-bom:26.2.0')
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-analytics'
    implementation 'com.google.firebase:firebase-messaging'

    // Add the dependencies for the Crashlytics and Analytics libraries
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation 'com.google.firebase:firebase-crashlytics-ktx'
    implementation 'com.google.firebase:firebase-analytics-ktx'

    // Fix "Duplicate class androidx.lifecycle.ViewModelLazy found in modules" error
    implementation 'androidx.lifecycle:lifecycle-viewmodel-ktx:2.6.2'
    implementation 'com.google.android.material:material:1.11.0'
    // Local binary dependency
    //Even though android provides json library, it bring error while using it for JUnit testing
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    implementation 'com.google.android.gms:play-services-ads-lite:22.6.0'
    //http://tools.android.com/tech-docs/unit-testing-support
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.mockito:mockito-core:2.23.4'
    androidTestImplementation 'androidx.annotation:annotation:1.7.1'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    // Set this dependency to use JUnit 4 rule
    androidTestImplementation 'androidx.test:rules:1.5.0'
    // Set this dependency to build and run Espresso tests
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    // Set this dependency to build and run UI Automator tests
    //androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    //In order for the Android Plug-in for Gradle to correctly build and run your instrumented
    // unit tests, you must specify the following libraries in the build.gradle file of your
    // Android app module:
    // Set this dependency if you want to use Hamcrest matching
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
    'org.hamcrest:hamcrest-library:1.1'
    implementation 'androidx.cardview:cardview:1.0.0'
    implementation 'androidx.recyclerview:recyclerview:1.3.2'
    //compile 'com.wnafee:vector-compat:1.0.5'
    implementation files('libs/Android-FolderPicker-release.aar')
    implementation project(':androidpdfwriter')
}

// Apply this plugin at the bottom of the build.gradle file: https://developers.google.com/android/guides/google-services-plugin
apply plugin: 'com.google.gms.google-services'